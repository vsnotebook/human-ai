用户中心添加使用情况。下表中的价格适用于 Speech-to-Text v2 API 每月处理的音频分钟数。

1、添加用户余额表。包含，语音识别余额、语音合成余额、文本翻译余额、语音翻译余额。这里的余额就是剩余的数量。语音识别的单位是秒。语音合成的单位是字符数量。
2、用户的订单支付成功，就添加订单对应时长的余额到用户余额表。
3、用户注册成功，赠送1分钟语音识别功能。500个字符合成。

#auth.html 不需要余额页面模板。相关剩余信息可以放到dashboard.html文件里面。里面有注册相关信息。补充注册完成添加赠送额度。


home.py voice_translate.py speech_service.py 用户点击语音识别的时候，扣除用户的语音识别时长余额。扣除的数量是上传音频文件的时长。


home.py voice_translate.py speech_service.py使用SpeechService.transcribe_by_userid 语音识别,需要将相关信息记录日志。包含，语音识别文件名称、语音识别文件名对应的时长、文本翻译字符数、文本合成字符数等
我需要修改 voice_translate.py 文件，添加日志记录功能，记录语音识别文件名称、时长、文本翻译字符数和文本合成字符数等信息。

不要用估算的方式。在前端将录音的AAC 格式转换为wav格式。
不能根据文件名的后缀来判断。假定音频文件名称的后缀都是.bin。通过音频文件的头信息来判断

在前端将录音生成的音频格式转换为wav格式。
主要改动：

1. 设置录音参数：单声道、16kHz采样率、16位采样大小
2. 使用opus编码器进行录音
3. 添加了将AudioBuffer转换为WAV格式的函数
4. 在录音停止时，将录音数据转换为WAV格式后再发送到服务器
这样修改后，录音的音频将以WAV格式发送到服务器，格式为：

- 编码：PCM
- 采样率：16kHz
- 位深：16位
- 声道：单声道
这些参数与Google Speech-to-Text API的推荐配置相匹配。


1. 设置录音参数：单声道、16kHz采样率、16位采样大小
2. 使用无损编码器进行录音
3. 添加了将AudioBuffer转换为WAV格式的函数
4. 在录音停止时，将录音数据转换为WAV格式后再发送到服务器
这样修改后，录音的音频将以WAV格式发送到服务器，格式为：



